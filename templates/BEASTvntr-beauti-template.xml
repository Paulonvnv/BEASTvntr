<beast version='2.0'
       namespace='beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions'>
       
    <mergewith point='substModelTemplates'>

        <subtemplate id='Sainudiin' class='beast.evolution.substitutionmodel.Sainudiin' mainid='Sainudiin.s:$(n)'>
            <![CDATA[
            <plugin spec='Sainudiin' id='Sainudiin.s:$(n)'>
                <parameter id="rb.s:$(n)" name='rb' value='0.0' estimate='true' lower='0.0' upper='10.0'/>
                <parameter id="ieq.s:$(n)" name='ieq' value='1.0' lower='1.0' upper='15.0' estimate='true'/>
                <parameter id="g.s:$(n)" name='g' value='0.0' lower='0.0' upper='1.0' estimate='true'/>
                <parameter id="oneOnA1.s:$(n)" name='oneOnA1' value='1.0' lower='0.0' upper='10.0' estimate='true'/>
                <parameter id="startLinRegime.s:$(n)" spec='parameter.IntegerParameter' name='startLinRegime' value='3' lower='1' upper='15' estimate='false'/>
                <frequencies id='estimatedFreqs.s:$(n)' spec='Frequencies'>
                    <frequencies id='freqParameter.s:$(n)' spec='parameter.RealParameter' dimension='16' value='0.0625' lower='0' upper='1'/>
                    <!-- dimension and value get's corrected by Sainudiin -->
                </frequencies>
            </plugin>
            <plugin id='rbWalker.s:$(n)' spec='RealRandomWalkOperator' windowSize="0.01" weight="0.1" parameter="@rb.s:$(n)"/>
            <plugin id='ieqWalker.s:$(n)' spec='RealRandomWalkOperator' windowSize="0.01" weight="0.1" parameter="@ieq.s:$(n)"/>
            <plugin id='gWalker.s:$(n)' spec='RealRandomWalkOperator' windowSize="0.01" weight="0.1" parameter="@g.s:$(n)"/>
            <plugin id='oneOnA1Walker.s:$(n)' spec='RealRandomWalkOperator' windowSize="0.01" weight="0.1" parameter="@oneOnA1.s:$(n)"/>
            <plugin id='startLinRegimeWalker.s:$(n)' spec='IntRandomWalkOperator' windowSize="1" weight="0.1" parameter="@startLinRegime.s:$(n)"/>
            <plugin id='FrequenciesExchanger.s:$(n)' spec='DeltaExchangeOperator' delta="0.01" weight="0.1" parameter="@freqParameter.s:$(n)"/>

            <prior id='rbPrior.s:$(n)' x='@rb.s:$(n)'>
				<distr spec="beast.math.distributions.Uniform" lower='0' upper='10'/>
            </prior>
            <prior id='ieqPrior.s:$(n)' x='@ieq.s:$(n)'>
                <distr spec="beast.math.distributions.Uniform" lower='0.0' upper='14.0'/>    
            </prior>
            <prior id='gPrior.s:$(n)' x='@g.s:$(n)'>
				<distr spec="beast.math.distributions.Uniform" lower='0' upper='1'/>
            </prior>
            <prior id='oneOnA1Prior.s:$(n)' x='@oneOnA1.s:$(n)'>
                <distr spec="beast.math.distributions.Uniform" lower='0' upper='10'/>
            </prior>
            <prior id='startLinRegimePrior.s:$(n)' x='@startLinRegime.s:$(n)'>
                <distr spec="beast.math.distributions.Uniform" lower='1' upper='15'/>
            </prior>
]]>

            <connect srcID='rb.s:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(rb.s:$(n)) and rb.s:$(n)/estimate=true'/>
            <connect srcID='ieq.s:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(ieq.s:$(n)) and ieq.s:$(n)/estimate=true'/>
            <connect srcID='g.s:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(g.s:$(n)) and g.s:$(n)/estimate=true'/>         
            <connect srcID='oneOnA1.s:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(oneOnA1.s:$(n)) and oneOnA1.s:$(n)/estimate=true'/>
            <connect srcID='startLinRegime.s:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(startLinRegime.s:$(n)) and startLinRegime.s:$(n)/estimate=true'/>
            <connect srcID='freqParameter.s:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(Sainudiin.$(n)) and inlikelihood(freqParameter.s:$(n)) and freqParameter.s:$(n)/estimate=true'/>

            <connect srcID='rbWalker.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(rb.s:$(n)) and rb.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='ieqWalker.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(ieq.s:$(n)) and ieq.s:$(n)/estimate=true'/>
            <connect srcID='gWalker.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(g.s:$(n)) and g.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='oneOnA1Walker.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(oneOnA1.s:$(n)) and oneOnA1.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='startLinRegimeWalker.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(startLinRegime.s:$(n)) and startLinRegime.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='FrequenciesExchanger.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(Sainudiin.$(n)) and inlikelihood(freqParameter.s:$(n)) and freqParameter.s:$(n)/estimate=true'>
                Exchange values of frequencies of partition s:$(n)
            </connect>

            <connect srcID='rb.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(rb.s:$(n)) and rb.s:$(n)/estimate=true'/>
            <connect srcID='ieq.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(ieq.s:$(n)) and ieq.s:$(n)/estimate=true'/>
            <connect srcID='g.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(g.s:$(n)) and g.s:$(n)/estimate=true'/> 
            <connect srcID='oneOnA1.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(oneOnA1.s:$(n)) and oneOnA1.s:$(n)/estimate=true'/>
            <connect srcID='startLinRegime.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(startLinRegime.s:$(n)) and startLinRegime.s:$(n)/estimate=true'/>
            <connect srcID='freqParameter.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(Sainudiin.$(n)) and inlikelihood(freqParameter.s:$(n)) and freqParameter.s:$(n)/estimate=true'/>

            <connect srcID='rbPrior.s:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(rb.s:$(n)) and rb.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='ieqPrior.s:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(ieq.s:$(n)) and ieq.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='gPrior.s:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(g.s:$(n)) and g.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='oneOnA1Prior.s:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(oneOnA1.s:$(n)) and oneOnA1.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='startLinRegimePrior.s:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(startLinRegime.s:$(n)) and startLinRegime.s:$(n)/estimate=true'>
            </connect>
        </subtemplate>

        <subtemplate id='SainudiinFreqsComputed' class='beast.evolution.substitutionmodel.SainudiinFreqsComputed' mainid='SainudiinFreqsComputed.s:$(n)'>
            <![CDATA[
            <plugin spec='SainudiinFreqsComputed' id='SainudiinFreqsComputed.s:$(n)'>
                <parameter id="rb.s:$(n)" name='rb' value='0.0' estimate='true' lower='0.0' upper='10.0'/>
                <parameter id="ieq.s:$(n)" name='ieq' value='1.0' lower='1.0' upper='15.0' estimate='true'/>
                <parameter id="g.s:$(n)" name='g' value='0.0' lower='0.0' upper='1.0' estimate='true'/>
                <parameter id="oneOnA1.s:$(n)" name='oneOnA1' value='1.0' lower='0.0' upper='10.0' estimate='true'/>
                <parameter id="startLinRegime.s:$(n)" spec='parameter.IntegerParameter' name='startLinRegime' value='3' lower='1' upper='15' estimate='false'/>
            </plugin>
            <plugin id='rbWalker.s:$(n)' spec='RealRandomWalkOperator' windowSize="0.01" weight="0.1" parameter="@rb.s:$(n)"/>
            <plugin id='ieqWalker.s:$(n)' spec='RealRandomWalkOperator' windowSize="0.01" weight="0.1" parameter="@ieq.s:$(n)"/>
            <plugin id='gWalker.s:$(n)' spec='RealRandomWalkOperator' windowSize="0.01" weight="0.1" parameter="@g.s:$(n)"/>
            <plugin id='oneOnA1Walker.s:$(n)' spec='RealRandomWalkOperator' windowSize="0.01" weight="0.1" parameter="@oneOnA1.s:$(n)"/>
            <plugin id='startLinRegimeWalker.s:$(n)' spec='IntRandomWalkOperator' windowSize="1" weight="0.1" parameter="@startLinRegime.s:$(n)"/>

            <prior id='rbPrior.s:$(n)' x='@rb.s:$(n)'>
				<distr spec="beast.math.distributions.Uniform" lower='0' upper='10'/>
            </prior>
            <prior id='ieqPrior.s:$(n)' x='@ieq.s:$(n)'>
                <distr spec="beast.math.distributions.Uniform" lower='0.0' upper='14.0'/>    
            </prior>
            <prior id='gPrior.s:$(n)' x='@g.s:$(n)'>
				<distr spec="beast.math.distributions.Uniform" lower='0' upper='1'/>
            </prior>
            <prior id='oneOnA1Prior.s:$(n)' x='@oneOnA1.s:$(n)'>
                <distr spec="beast.math.distributions.Uniform" lower='0' upper='10'/>
            </prior>
            <prior id='startLinRegimePrior.s:$(n)' x='@startLinRegime.s:$(n)'>
                <distr spec="beast.math.distributions.Uniform" lower='1' upper='15'/>
            </prior>
]]>

            <connect srcID='rb.s:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(rb.s:$(n)) and rb.s:$(n)/estimate=true'/>
            <connect srcID='ieq.s:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(ieq.s:$(n)) and ieq.s:$(n)/estimate=true'/>
            <connect srcID='g.s:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(g.s:$(n)) and g.s:$(n)/estimate=true'/>         
            <connect srcID='oneOnA1.s:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(oneOnA1.s:$(n)) and oneOnA1.s:$(n)/estimate=true'/>


            <connect srcID='rbWalker.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(rb.s:$(n)) and rb.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='ieqWalker.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(ieq.s:$(n)) and ieq.s:$(n)/estimate=true'/>
            <connect srcID='gWalker.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(g.s:$(n)) and g.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='oneOnA1Walker.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(oneOnA1.s:$(n)) and oneOnA1.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='startLinRegimeWalker.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(startLinRegime.s:$(n)) and startLinRegime.s:$(n)/estimate=true'>
            </connect>

            <connect srcID='rb.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(rb.s:$(n)) and rb.s:$(n)/estimate=true'/>
            <connect srcID='ieq.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(ieq.s:$(n)) and ieq.s:$(n)/estimate=true'/>
            <connect srcID='g.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(g.s:$(n)) and g.s:$(n)/estimate=true'/> 
            <connect srcID='oneOnA1.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(oneOnA1.s:$(n)) and oneOnA1.s:$(n)/estimate=true'/>
            <connect srcID='startLinRegime.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(startLinRegime.s:$(n)) and startLinRegime.s:$(n)/estimate=true'/>

            <connect srcID='rbPrior.s:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(rb.s:$(n)) and rb.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='ieqPrior.s:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(ieq.s:$(n)) and ieq.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='gPrior.s:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(g.s:$(n)) and g.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='oneOnA1Prior.s:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(oneOnA1.s:$(n)) and oneOnA1.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='startLinRegimePrior.s:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(startLinRegime.s:$(n)) and startLinRegime.s:$(n)/estimate=true'>
            </connect>
        </subtemplate>

        <subtemplate id='SainudiinStepWise' class='beast.evolution.substitutionmodel.SainudiinStepWise' mainid='SainudiinStepWise.s:$(n)'>
            <![CDATA[
            <plugin spec='SainudiinStepWise' id='SainudiinStepWise.s:$(n)'>
                <parameter id="rb.s:$(n)" name='rb' value='0.0' estimate='true' lower='0.0' upper='10.0'/>
                <parameter id="ieq.s:$(n)" name='ieq' value='1.0' lower='0.0' upper='14.0' estimate='true'/>
                <parameter id="oneOnA1.s:$(n)" name='oneOnA1' value='1.0' lower='0.0' upper='10.0' estimate='true'/>
            </plugin>
            
            <plugin id='rbWalker.s:$(n)' spec='RealRandomWalkOperator' windowSize="0.01" weight="0.1" parameter="@rb.s:$(n)"/>
            <plugin id='ieqWalker.s:$(n)' spec='RealRandomWalkOperator' windowSize="0.01" weight="0.1" parameter="@ieq.s:$(n)"/>
            <plugin id='oneOnA1Walker.s:$(n)' spec='RealRandomWalkOperator' windowSize="0.01" weight="0.1" parameter="@oneOnA1.s:$(n)"/>

            <prior id='rbPrior.s:$(n)' x='@rb.s:$(n)'>
                <distr spec="beast.math.distributions.Uniform" lower='0' upper='10'/>
            </prior>
            <prior id='ieqPrior.s:$(n)' x='@ieq.s:$(n)'>
                <distr spec="beast.math.distributions.Uniform" lower='0.0' upper='14.0'/>    
            </prior>
            <prior id='oneOnA1Prior.s:$(n)' x='@oneOnA1.s:$(n)'>
                <distr spec="beast.math.distributions.Uniform" lower='0' upper='10'/>
            </prior>
]]>

            <connect srcID='rb.s:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(rb.s:$(n)) and rb.s:$(n)/estimate=true'/>
            <connect srcID='ieq.s:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(ieq.s:$(n)) and ieq.s:$(n)/estimate=true'/> 
            <connect srcID='oneOnA1.s:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(oneOnA1.s:$(n)) and oneOnA1.s:$(n)/estimate=true'/>

            <connect srcID='rbWalker.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(rb.s:$(n)) and rb.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='ieqWalker.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(ieq.s:$(n)) and ieq.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='oneOnA1Walker.s:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(oneOnA1.s:$(n)) and oneOnA1.s:$(n)/estimate=true'>
            </connect>

            <connect srcID='rb.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(rb.s:$(n)) and rb.s:$(n)/estimate=true'/>    
            <connect srcID='ieq.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(ieq.s:$(n)) and ieq.s:$(n)/estimate=true'/> 
            <connect srcID='oneOnA1.s:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(oneOnA1.s:$(n)) and oneOnA1.s:$(n)/estimate=true'/>         

            <connect srcID='rbPrior.s:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(rb.s:$(n)) and rb.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='ieqPrior.s:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(ieq.s:$(n)) and ieq.s:$(n)/estimate=true'>
            </connect>
            <connect srcID='oneOnA1Prior.s:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(oneOnA1.s:$(n)) and oneOnA1.s:$(n)/estimate=true'>
            </connect>
        </subtemplate>
    </mergewith>
</beast>
